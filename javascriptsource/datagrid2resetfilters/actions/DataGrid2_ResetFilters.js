// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * @param {string} className - The class set on the datagrid 2
 * @returns {Promise.<void>}
 */
export async function DataGrid2_ResetFilters(className) {
	// BEGIN USER CODE
	const filters = document.querySelectorAll('.' + className + ' .filter-container .form-control, .' + className + ' .dropdown-container .form-control');
	debugger;
	if (filters.length == 0) {
		return Promise.resolve();
	}

	filters.forEach((filter) => {
		const props = Object.keys(filter);
		let ctrls   = filter.getAttribute('aria-controls');
		let react   = null;

		// Reset value
		filter.value = '';

		// Find the __reactProps property of the current filter
		for (let i = 0; i < props.length; i++) {
			if (props[i].includes('__reactProps')) {
				react = props[i];
				break;
			}
		}

		// Trigger the react onchange event
		if (react && filter[react].onChange) {
			filter[react].onChange({target: filter});
		}

		// Reset multi-select dropdown filters
		if (react && filter[react].onClick) {
			// Open the dropdown list
			filter[react].onClick();
			
			if (ctrls) {
				// Get all checked entries
				const checked = document.querySelectorAll('#' + ctrls + ' input[checked]');

				checked.forEach((check) => {
					const props = Object.keys(check.parentElement);

					// Uncheck the entry
					check.removeAttribute('checked');

					for (let i = 0; i < props.length; i++) {
						if (props[i].includes('__reactProps')) {
							react = props[i];
							break;
						}
					}

					if (react) {
						check.parentElement[react].onClick({
							target: check.parentElement,
							preventDefault: function() {},
							stopPropagation: function() {}
						});
					}
				});
			}
			
			// Close the dropdown menu
			filter[react].onClick();
		}
	});

	return Promise.resolve();
	// END USER CODE
}
